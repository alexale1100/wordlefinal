import random
import datetime
from PyDictionary import PyDictionary 
from wordlist import words

# Define word lists for each category and day of the week
word_categories = { #the variable "word_categories" is defined with either fruits, animals, or colors. 
    0: {  # Monday #The day of the week is indexed and the word list for that day is found by linking the list to the index of that day.
        "fruits": ["apple", "grape", "lemon", "peach", "berry"],
        "animals": ["tiger", "whale", "horse", "eagle", "zebra"],
        "colors": ["green", "black", "white", "lilac", "amber"]
    },
    1: {  # Tuesday
        "fruits": ["melon", "mango", "pearl", "guava", "olive"],
        "animals": ["shark", "koala", "panda", "rhino", "snake"],
        "colors": ["cream", "olive", "pearl", "ivory", "coral"]
    },
    2: {  # Wednesday
        "fruits": ["plums", "prune", "apple", "guava", "dates"],
        "animals": ["otter", "llama", "camel", "hyena", "bison"],
        "colors": ["beige", "blond", "mauve", "pearl", "green"]
    },
    3: {  # Thursday
        "fruits": ["kiwis", "lyche", "prune", "limes", "pears"],
        "animals": ["goose", "panda", "robin", "gecko", "zebra"],
        "colors": ["amber", "olive", "ebony", "black", "cream"]
    },
    4: {  # Friday
        "fruits": ["kiwis", "mango", "plums", "melon", "cocoa"],
        "animals": ["otter", "moose", "shark", "panda", "whale"],
        "colors": ["ivory", "lilac", "brown", "black", "white"]
    },
    5: {  # Saturday
        "fruits": ["apple", "prune", "grape", "limes", "lemon"],
        "animals": ["sloth", "robin", "rhino", "koala", "bison"],
        "colors": ["coral", "cream", "green", "brown", "ivory"]
    },
    6: {  # Sunday
        "fruits": ["melon", "dates", "berry", "apple", "olive"],
        "animals": ["zebra", "camel", "panda", "shark", "whale"],
        "colors": ["mauve", "lilac", "beige", "white", "black"]
    }
}

def is_valid_word(guess): #this function allows the code to see whether the word the player inputs is an actual word by drawing from the python dictionary
    """Check if the guess is a valid 5-letter word using PyDictionary."""
    if len(guess) != 5:
        return False
    
    # Check if the word exists in the dictionary
    if guess in words:
        return True  # If meaning exists, it's a valid word
    else:
        return False  # If there's any issue (e.g., no internet), treat as invalid

# Store the last week when the words were shuffled
last_shuffled_week = None

def shuffle_word_lists():
    """Shuffle the word lists at the beginning of a new week."""
    global last_shuffled_week
    current_week = datetime.datetime.now().isocalendar()[1]  # Get the current week number

    # If it's a new week or the first time running the game, shuffle the lists
    if last_shuffled_week != current_week:
        print(f"Shuffling word lists for week {current_week}...")
        for day_categories in word_categories.values():
            for word_list in day_categories.values():
                random.shuffle(word_list)
        last_shuffled_week = current_week

def get_word_list_for_today(): #this function chooses the word list depending on the day. The word list is linked the the index, which determines the day. 
    # Get the current day of the week (0 = Monday, 6 = Sunday)
    current_day = datetime.datetime.now().weekday()
    return word_categories[current_day]

def get_feedback(guess, word): #this function prints the feedback the player will get after they guess a word. For exammple, "GGYBY". 
    feedback = ['_'] * 5  # Placeholder for feedback
    for i in range(5):
        if guess[i] == word[i]:
            feedback[i] = 'G'  # Correct letter and position (Green)
        elif guess[i] in word:
            feedback[i] = 'Y'  # Correct letter but wrong position (Yellow)
        else:
            feedback[i] = 'B'  # Incorrect letter (Blank/Black)
    return ''.join(feedback)

def play_wordle(): 
    # # Shuffle the word lists if it's a new week
    # shuffle_word_lists()

    # # Get today's word lists
    # word_lists = get_word_list_for_today()
    
    # # Show available categories to the player
    # categories = list(word_lists.keys())
    # print("Categories for today:", ', '.join(categories))

    # # Ask player to pick a category
    # while True: #this part of the function ensures that the category the player picked is a valid category and that there is a word list for that category. 
    #     category = input("Pick a category: ").lower()
    #     if category in word_lists:
    #         break
    #     print(f"Invalid category! Please choose from: {', '.join(categories)}")
    

    # # Pick a random word from the chosen category
    # word = random.choice(word_lists[category]) #this code chooses a random code from the the word list of that category. 
    # attempts = 6  # 6 tries

    # print(f"Welcome to Wordle! Guess the 5-letter word from the '{category}' category.")
    
    for i in range(1,7):
        answer = random.choice(words) 
        print(answer)

        print(f"main loop {i}")

        guess = input("Enter your first Guess") 
        
        # why use while loop?
        while is_valid_word(guess) == False:
            guess = input("guess not valid. Enter another Guess ")

        # guessing
        for position in range(5):
            # print(f"     check loop {i}")
            guess_letter = guess[position]
            answer_letter = answer[position]
            # print(f"     {guess_letter}")
            # print(f"     {answer_letter}")

            if guess_letter == answer_letter:
                print("G")
            elif guess_letter in answer:
                print("Y")
            else: 
                print("-")

        # for next time:
        # - try and use string concat to show G/Y/- next to each other
        # comment the code we wrote today

        
            

        



# Run the game
play_wordle()
